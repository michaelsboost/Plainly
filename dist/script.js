window.PlainlyState={editorVisible:!0,dark:!0,name:"Welcome file",md:'# Welcome to Plainly!\n\nThis is a **Markdown editor** with live preview. You can use it to quickly prototype notes, guides, or documentation.\n\n---\n\n## ‚ú® Features Showcase\n\n### ‚úÖ Lists\n- Bullet list item 1\n- Bullet list item 2\n  - Nested item\n\n1. Numbered list item 1\n2. Numbered list item 2\n\n### üì¶ Code Blocks\n\n```javascript\nfunction greet(name) {\n  console.log("Hello, " + name);\n}\ngreet("World");\n```\n\nInline code: `const x = 42;`\n\n### üñºÔ∏è Images\n\n![Sample Image](https://live.staticflickr.com/29/67513019_31941426ac.jpg)\n\n### üìä Tables\n\n| Feature       | Supported | Notes                      |\n|---------------|-----------|----------------------------|\n| Headers       | ‚úÖ        | All heading levels         |\n| Lists         | ‚úÖ        | Nested supported           |\n| Code blocks   | ‚úÖ        | Fenced + inline code       |\n| Tables        | ‚úÖ        | With alignment (optional)  |\n| Blockquotes   | ‚úÖ        | Styling varies by theme    |\n\n### üí¨ Blockquotes\n\n> ‚ÄúMarkdown is not a replacement for HTML, or even close to it... The idea is that a Markdown-formatted document should be publishable as-is.‚Äù ‚Äî John Gruber\n\n---\n\n## üìÑ Getting Started\n\nEdit the left panel and see your preview update in real time.\n\n---\n\n### üõ†Ô∏è Customize It\n\nYou can change the theme, import/export your project, and build PDFs or HTML exports.\n\nHappy writing! ‚úçÔ∏è\n\n---\n\n'};const e={render({large:e,title:t="Are you sure you want to proceed?",content:n,CloseLabel:o,ConfirmLabel:a,onLoad:l,onClose:r,onConfirm:i}){const s=`<article class="${e?"flex flex-col h-3/4":""} rounded-md">\n      <header class="${e?"flex-none":""} flex justify-between items-center">\n        <h1 class="text-lg font-thin m-0">${t}</h1>\n        <button class="border-0 bg-transparent text-sm focus:shadow-none bg-transparent border-0" style="color: unset;" aria-label="Close">\n          <svg class="w-3" viewBox="0 0 384 512">\n        <path \n          fill="currentColor" \n          d="M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"/>\n      </svg>\n        </button>\n      </header>\n      <main class="font-thin ${e?"flex-grow":""}">\n        ${n||""}\n      </main>\n      <footer ${e?'class="flex-none"':""}>\n        <button class="border-0 bg-transparent text-sm focus:shadow-none bg-transparent border ${PlainlyState.dark?"border-gray-600":"border-gray-200"}" style="color: unset;" aria-label="Close" onclick="this.closest('dialog').remove()">${o||"close"}</button>\n        ${i?`<button class="border-0 text-sm focus:shadow-none" aria-label="Confirm">${a||"confirm"}</button>`:""}\n      </footer>\n    </article>`,c=document.createElement("dialog");c.open=!0,c.innerHTML=s,document.body.appendChild(c),l&&"function"==typeof l&&l();const d=c.querySelector("header button"),m=c.querySelector("footer button:first-child"),u=c.querySelector("footer button:last-child");d.onclick=function(){r&&"function"==typeof r&&r(),document.body.removeChild(c)},m.onclick=function(){r&&"function"==typeof r&&r(),document.body.removeChild(c)},u.onclick=function(){i&&"function"==typeof i&&i(),document.body.removeChild(c)}}};let t,n="0.0.2",o="imgs/logo.svg";function a(e){if(!e)return"";let t=e.replace(/[<>:"/\\|?*\x00-\x1F]/g,"_").replace(/\.+$/,"").trim();return/^(con|prn|aux|nul|com[0-9]|lpt[0-9])$/i.test(t)&&(t="_"+t),t||(t="document"),t.substring(0,255)}function l(){const e=new Date,t=e.getDate(),n=e.getMonth()+1;return`${e.getFullYear()}-${n}-${t}_${e.getHours()}-${e.getMinutes()}-${e.getSeconds()}`}window.openMenu=()=>{e.render({title:"Menu",large:!0,content:`\n      <div class="grid grid-cols-1 gap-2 px-4">\n        <div class="text-center">\n          <a aria-label="project homepage" name="project homepage" target="_blank" href="https://github.com/michaelsboost/Plainly/">\n            <img alt="logo" class="my-4 w-24 m-auto rounded-2xl" src="${o}" loading="lazy">\n          </a>\n          <div class="text-2xl">\n            About Plainly\n          </div>\n          <div class="my-2 text-xs">\n            Version ${n}\n          </div>\n          <a target="_blank" class="text-sm underline mb-2 text-blue-500" href="https://github.com/michaelsboost/Plainly/blob/main/LICENSE">\n            Open Source License\n          </a>\n        </div>\n        \n        <nav class="flex justify-between mt-5 items-center">\n          <label for="if2s51d22" class="mb-2 flex justify-between items-center cursor-pointer">\n            <span>Dark mode:</span>\n          </label>\n          <input id="if2s51d22" class="m-0" type="checkbox" role="switch" name="toggle dark mode" \n            onchange="theme()" ${PlainlyState.dark?'checked=""':""}>\n        </nav>\n        \n        <div class="grid grid-cols-2 gap-2 py-4">\n          <button onclick="newProject()">New Project</button>\n          <button onclick="importProject()">Import</button>\n        </div>\n        \n        <div class="border-t ${PlainlyState.dark?"border-gray-600":"border-gray-200"} pt-4">\n          <h3 class="text-sm font-bold mb-2">Export Options:</h3>\n          <div class="grid grid-cols-2 gap-2">\n            <button onclick="exportAsMarkdown()">Markdown (.md)</button>\n            <button onclick="exportAsHTML()">HTML (.html)</button>\n            <button onclick="exportAsDOCX()">Word (.docx)</button>\n            <button onclick="exportAsPDF()">PDF (.pdf)</button>\n            <button onclick="exportAsTXT()">Text (.txt)</button>\n            <button onclick="exportAsJSON()">JSON (.json)</button>\n          </div>\n        </div>\n      </div>\n    `,CloseLabel:"Close"})},window.newProject=()=>{e.render({title:"Are you sure you want to start a new project?",content:'<div class="p-4 text-center">All current data will be lost.</div>',onConfirm(){PlainlyState.dark||theme(),PlainlyState={editorVisible:!0,dark:!0,name:"New file",md:""},projectName.value=PlainlyState.name,input.value=PlainlyState.md,updatePreview()}})},window.importProject=()=>{e.render({title:"Import Options",content:'\n      <div class="grid grid-cols-1 gap-2 p-4">\n        <button onclick="importFile(\'json\')">Import (.json)</button>\n        <button onclick="importFile(\'md\')">Import Markdown (.md)</button>\n        <button onclick="importFile(\'html\')">Import HTML (.html)</button>\n        <button onclick="importFile(\'txt\')">Import Text (.txt)</button>\n      </div>\n    ',CloseLabel:"Cancel"})},window.importFile=t=>{document.querySelector("dialog")?.remove();const n=document.createElement("input");switch(n.type="file",t){case"json":n.accept=".json";break;case"md":n.accept=".md,.markdown";break;case"html":n.accept=".html,.htm";break;case"txt":n.accept=".txt,.text"}n.addEventListener("change",(async n=>{const o=n.target.files[0];if(!o)return;const a=new FileReader;a.onload=async function(n){try{let e=n.target.result,a=o.name.replace(/\.[^/.]+$/,"");switch(t){case"json":const t=JSON.parse(e);PlainlyState={...PlainlyState,...t};break;case"md":PlainlyState.md=e,PlainlyState.name=a||"Imported Markdown";break;case"html":const n=await async function(e){return(new TurndownService).turndown(e)}(e);PlainlyState.md=n,PlainlyState.name=a||"Imported HTML";break;case"txt":PlainlyState.md=e,PlainlyState.name=a||"Imported Text"}document.getElementById("projectName").value=PlainlyState.name,document.getElementById("input").value=PlainlyState.md,updatePreview()}catch(t){e.render({title:"Import Error",content:`<div class="p-4">Failed to import file: ${t.message}</div>`,CloseLabel:"OK"}),console.error("Import failed:",t)}},a.readAsText(o)})),n.click()},window.exportAsMarkdown=()=>{try{const e=a(PlainlyState.name),t=new Blob([PlainlyState.md],{type:"text/markdown"});saveAs(t,`${e||l()}.md`)}catch(t){e.render({title:"Export Error",content:`<div class="p-4">Failed to create Markdown export: ${t.message}</div>`,CloseLabel:"OK"}),console.error("Markdown export failed:",t)}},window.exportAsHTML=()=>{try{const e=a(PlainlyState.name),t=`<!DOCTYPE html>\n    <html>\n      <head>\n        <meta charset="utf-8">\n        <meta name="viewport" content="width=device-width, initial-scale=1">\n        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/picocss/2.0.6/pico.min.css">\n        <title>${e||"Document"}</title>\n      </head>\n      <body>\n        <main class="container">\n          ${marked.parse(PlainlyState.md)}\n        </main>\n      </body>\n    </html>`,n=new Blob([t],{type:"text/html"});saveAs(n,`${e||l()}.html`)}catch(t){e.render({title:"Export Error",content:`<div class="p-4">Failed to create HTML export: ${t.message}</div>`,CloseLabel:"OK"}),console.error("HTML export failed:",t)}},window.exportAsDOCX=async()=>{const{Document:e,Packer:t,Paragraph:n,TextRun:o,HeadingLevel:l,Table:r,TableRow:i,TableCell:s,AlignmentType:c,WidthType:d,Media:m}=window.docx,u=marked.parse(PlainlyState.md),p=document.createElement("div");function y(e){const t=/(`)(.*?)\1/g,n=[];let a,l=0;for(;null!==(a=t.exec(e));)a.index>l&&n.push(new o(e.slice(l,a.index))),n.push(new o({text:a[2],font:"Courier New",size:22,color:"222222"})),l=t.lastIndex;return l<e.length&&n.push(new o(e.slice(l))),n}p.innerHTML=u;const h=[];for(const e of p.childNodes){if(e.nodeType!==Node.ELEMENT_NODE)continue;const t=e.tagName.toLowerCase(),a=e.innerText||e.textContent||"";if("h1"===t)h.push(new n({heading:l.HEADING_1,children:[new o(a)]}));else if("h2"===t)h.push(new n({heading:l.HEADING_2,children:[new o(a)]}));else if("h3"===t)h.push(new n({heading:l.HEADING_3,children:[new o(a)]}));else if("p"===t)h.push(new n({children:y(a)}));else if("blockquote"===t)h.push(new n({children:[new o({text:a,italics:!0})]}));else if("pre"===t){const t=(e.querySelector("code")?.textContent||e.textContent).trim().split("\n").map((e=>new n({children:[new o({text:e,font:"Courier New",size:22})]})));h.push(...t)}else if("ul"===t||"ol"===t){const o="ol"===t;for(const t of e.querySelectorAll("li"))h.push(new n({text:t.innerText,bullet:o?void 0:{level:0}}))}else if("table"===t){const t=[...e.querySelectorAll("tr")].map((e=>{const t=[...e.children].map((e=>new s({children:[new n({text:e.innerText.replace(/\n/g," ").trim()})],verticalAlign:"center",width:{size:4500,type:d.DXA},margins:{top:100,bottom:100,left:200,right:200}})));return new i({children:t})}));h.push(new r({rows:t,width:{size:100,type:d.PERCENTAGE},alignment:c.LEFT}))}else if("img"===t){const t=e.getAttribute("src");try{let e;if(t.startsWith("data:")){const n=t.split(",")[1];e=Uint8Array.from(atob(n),(e=>e.charCodeAt(0))).buffer}else{const n=await fetch(t,{mode:"cors"}),o=await n.blob();e=await o.arrayBuffer()}const o=m.addImage(b,e,400,300);h.push(new n(o))}catch(e){h.push(new n({children:[new o(`‚ö†Ô∏è Could not load image: ${t}`)]}))}}else h.push(new n({children:y(a)}))}const b=new e({styles:{default:{document:{run:{font:"Arial",size:24,color:"000000"},paragraph:{spacing:{line:276}}}}},sections:[{children:h}]}),g=await t.toBlob(b),w=a(PlainlyState.name);saveAs(g,`${w||"document"}.docx`)},window.exportAsPDF=async()=>{try{const e=a(PlainlyState.name),t=`\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta charset="utf-8">\n        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/picocss/2.0.6/pico.min.css">\n        <style>\n          @media print {\n            .page-break {\n              page-break-after: always;\n            }\n          }\n          \n          body {\n            font-size: 12pt;\n            line-height: 1.6;\n          }\n          \n          @page {\n            margin: 2cm;\n          }\n          main.container {\n            background-color: var(--pico-background-color);\n            color: var(--pico-color);\n          }\n        </style>\n      </head>\n      <body>\n        <main class="container" style="padding: 2rem;">\n          ${marked.parse(PlainlyState.md)}\n        </main>\n      </body>\n    </html>`,n={margin:10,filename:`${e||l()}.pdf`,image:{type:"jpeg",quality:.98},html2canvas:{scale:2,useCORS:!0,allowTaint:!0,backgroundColor:PlainlyState.dark?"#13171f":"#ffffff"},jsPDF:{unit:"mm",format:"a4",orientation:"portrait"}};await html2pdf().set(n).from(t).save()}catch(t){e.render({title:"Export Error",content:`<div class="p-4">Failed to create PDF export: ${t.message}</div>`,CloseLabel:"OK"}),console.error("PDF export failed:",t)}},window.exportAsJSON=()=>{try{const e=a(PlainlyState.name),t=JSON.stringify(PlainlyState,null,2),n=new Blob([t],{type:"application/json"});saveAs(n,`${e||"project"}.json`)}catch(t){e.render({title:"Export Error",content:`<div class="p-4">Failed to create JSON export: ${t.message}</div>`,CloseLabel:"OK"}),console.error("JSON export failed:",t)}},window.exportAsTXT=()=>{try{const e=a(PlainlyState.name);let t=PlainlyState.md.replace(/^#+\s+(.*$)/gm,"$1\n").replace(/(\*\*|__)(.*?)\1/g,"$2").replace(/(\*|_)(.*?)\1/g,"$2").replace(/\[(.*?)\]\(.*?\)/g,"$1").replace(/!\[(.*?)\]\(.*?\)/g,"$1").replace(/`{3}[\s\S]*?`{3}/g,"").replace(/`(.*?)`/g,"$1").replace(/\n{3,}/g,"\n\n");const n=new Blob([t],{type:"text/plain"});saveAs(n,`${e||l()}_plain.txt`)}catch(t){e.render({title:"Export Error",content:`<div class="p-4">Failed to create text export: ${t.message}</div>`,CloseLabel:"OK"}),console.error("Text export failed:",t)}},window.theme=()=>{PlainlyState.dark=!PlainlyState.dark,autosavePlainly();const e=document.getElementById("if2s51d22");e&&(e.checked=PlainlyState.dark),document.documentElement.setAttribute("data-theme",PlainlyState.dark?"dark":"light"),document.querySelectorAll('[data-theme="border"]').forEach((e=>{e.classList.toggle("border-gray-800",PlainlyState.dark),e.classList.toggle("border-gray-200",!PlainlyState.dark)}))},window.toggleEditor=()=>{PlainlyState.editorVisible=!PlainlyState.editorVisible,autosavePlainly();document.getElementById("icon").style.color=PlainlyState.editorVisible?"#22c55e":"unset";document.querySelector("[data-panel=code]").style.display=PlainlyState.editorVisible?"":"none";document.querySelector("[data-panel=preview]").classList.toggle("flex-[1]","flex-[0]",PlainlyState.editorVisible)},window.createBlobURL=(e,t)=>{const n=new Blob([e],{type:t});return URL.createObjectURL(n)},window.updatePreview=()=>{clearTimeout(t),t=setTimeout((()=>{const e=document.getElementById("iframe");if(!e)return;const t=`<!DOCTYPE html>\n    <html>\n      <head>\n        <meta charset="utf-8">\n        <meta name="viewport" content="width=device-width, initial-scale=1">\n        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/picocss/2.0.6/pico.min.css">\n        <style>\n          html, body {\n            margin: 0;\n            padding: 0;\n            height: 100%;\n          }\n          main.container {\n            height: 100vh;\n            overflow-y: auto;\n            box-sizing: border-box;\n            padding: 2rem;\n          }\n        </style>\n      </head>\n      <body>\n        <main class="container">\n          ${marked.parse(PlainlyState.md)}\n        </main>\n      </body>\n    </html>`,n=createBlobURL(t,"text/html");e.src=n,e.onload=()=>{const t=document.getElementById("input"),n=e.contentDocument?.querySelector("main");if(!t||!n)return;let o=!1,a=null;function l(e,t){if(!e||!t)return;const n=e.scrollTop/(e.scrollHeight-e.clientHeight)*(t.scrollHeight-t.clientHeight);Math.abs(t.scrollTop-n)>2&&(t.scrollTop=n)}t.addEventListener("scroll",(function(){o||"preview"===a||(a="editor",o=!0,requestAnimationFrame((()=>{l(t,n),o=!1,a=null})))})),n.addEventListener("scroll",(function(){o||"editor"===a||(a="preview",o=!0,requestAnimationFrame((()=>{l(n,t),o=!1,a=null})))}))}}),300)},window.addEventListener("beforeunload",(()=>{localStorage.setItem("plainly_autosave",JSON.stringify(PlainlyState))})),window.autosavePlainly=()=>{localStorage.setItem("plainly_autosave",JSON.stringify(PlainlyState))};const r=localStorage.getItem("plainly_autosave");function i(){document.documentElement.setAttribute("data-theme",PlainlyState.dark?"dark":"light"),document.querySelectorAll('[data-theme="border"]').forEach((e=>{e.classList.toggle("border-gray-800",PlainlyState.dark),e.classList.toggle("border-gray-200",!PlainlyState.dark)}));document.querySelector("[data-panel=code]").style.display=PlainlyState.editorVisible?"":"none";document.getElementById("icon").style.color=PlainlyState.editorVisible?"#22c55e":"unset";document.getElementById("projectName").value=PlainlyState.name;document.getElementById("input").value=PlainlyState.md,updatePreview()}r&&(PlainlyState=JSON.parse(r),i()),document.addEventListener("DOMContentLoaded",(()=>i()));
